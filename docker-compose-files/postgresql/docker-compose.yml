---
networks:
  postgresql_net:
    attachable: false
    internal: false
    external: false
    name: postgresql
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.25.0/24
          ip_range: 172.20.25.0/24
          gateway: 172.20.25.1
    driver_opts:
      com.docker.network.bridge.default_bridge: "false"
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.bridge.name: "postgresql"
      com.docker.network.driver.mtu: "1500"
    labels:
      com.postgresql.network.description: "is an isolated bridge network."

services:
  postgresql_db:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1M"
        max-file: "2"
    stop_grace_period: 1m
    container_name: postgresql_db
    image: docker.io/postgres:17.5
    pull_policy: if_not_present
    volumes:
      - /docker/postgresql/production/db:/var/lib/postgresql/data
      - /docker/postgresql/production/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - .env
      - stack.env
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: Europe/Amsterdam # Adjust the timezone to match your local timezone. You can find the full list of timezones here https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
      POSTGRES_PASSWORD: ${PASSWORD_DB} # Fill in the value in both the .env and stack.env files
      POSTGRES_USER: ${USER_DB} # Fill in the value in both the .env and stack.env files
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    hostname: postgresql_db
    networks:
      postgresql_net:
        ipv4_address: 172.20.25.2
    # ports:
    #   - target: 5432
    #     host_ip: 127.0.0.1
    #     published: 5432
    #     protocol: tcp
    #     mode: ingress
    security_opt:
      - no-new-privileges:true
    labels:
      com.postgresql.db.description: "is a PostgreSQL database."
    healthcheck:
      disable: false
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
      start_interval: 5s
